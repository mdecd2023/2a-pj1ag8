var tipuesearch = {"pages": [{'title': 'About', 'text': '倉儲\xa0 https://github.com/mdecd2023/2a-pj1ag8 \xa0 \n 網頁\xa0 https://mdecd2023.github.io/2a-pj1ag8/ \xa0 \n 組員 41023102王郁淳(負責網站管理、專案規劃) \n \xa0 \xa0 \xa0 \xa0 \xa041023107林廷芸(負責影片錄製) \n', 'tags': '', 'url': 'About.html'}, {'title': 'portable', 'text': '如何製作可攜程式? \n', 'tags': '', 'url': 'portable.html'}, {'title': 'Schedule', 'text': 'W1 課程說明、分組 \n W2 228連假 \n W3 建立倉儲pj1agx、製作 Tutorial1 bubbleRob作業 \n W4 Tutorial1 bubbleRob作業報告 \n W5\xa0組長 加入統整協同作業倉儲 \n \xa0 \xa0 \xa0HW:兩台BubbleRob雙輪車在一足球場景中進行對戰，其中在雙方球門設置感測器，雙方各有一台BubbleRob負責運球，在規定時間內，每進一球後，即透過程式重新從球場中線發球重啟賽局，且必須設法配置計分板顯示比賽剩餘時間與比分 \n', 'tags': '', 'url': 'Schedule.html'}, {'title': 'W3', 'text': 'HW1 請各組寫一個程式判定 2a 哪一組已經完成網頁建置. \n HW2 開始執行 \xa0 https://mde.tw/pjcopsim/content/bubbleRobTutorial.html \xa0 ,\xa0 星期四補課時間, 要驗收 Tutorial1 (心得, 展示頁面說明各組員所完成項目, 說明該組的專案規劃) \n', 'tags': '', 'url': 'W3.html'}, {'title': '網頁建立心得', 'text': '剛開始架設網站時程式錯誤的狀況就層出不窮，像是.git檔案的存在使靜態網站建立失敗和協同作業時版本未更新無法pull等問題，我們請教了老師和許多同學之後越來越了解git系統，並一一把問題都解決。比起上學期 學到更多的東西，成就感倍增。 \n', 'tags': '', 'url': '網頁建立心得.html'}, {'title': '專案規劃', 'text': '1.範疇規劃：制定一份書面的範疇聲明，作爲作專案執行目標與方向的依據。 \n \xa0 \xa0範疇定義：將主要的專案工作步驟細分爲更小、更易管理的構成單元。 \n 2.活動定義：確認專案所有各階段應實施的具體活動。 \n \xa0 \xa0活動順序：明確說明各活動間的先後順序與彼此之關聯性。 \n \xa0 \xa0時間估算：估計爲完成各個活動所需的工作時間。 \n 3.進度規劃：根據活動順序、個別活動之時間和資源需求，發展出專案進度。 \n \xa0 \xa0資源規劃：確定每個專案活動所需的資源（人力、裝備等）及其數量。 \n 4.預算編列：估計實施專案所有及個別活動所需的資源成本。 \n \xa0 \xa0預算分配：將總預算分配到各項工作活動上。 \n 5.整合專案計畫：將所有計劃程序所產出的結果彙總成為一份完整、連貫及系統化的專案管理計畫書。 \n 參考: http://web.ncyu.edu.tw/~jacky/p3.pdf \n', 'tags': '', 'url': '專案規劃.html'}, {'title': 'tutorial1', 'text': '模擬兩球碰撞 \n \n \n 安裝sensingNose \n \n 接近傳感器、電機和輪子 \n \n 接近傳感器、電機、輪子和滑塊 \n \n \n \n', 'tags': '', 'url': 'tutorial1.html'}, {'title': 'tutorials1心得', 'text': '跟著老師給的使用手冊學習CoppeliaSim軟體，再利用wink製作影片，和組員共同討論、研究並完成作業。雖然目前只做了感測器的部分，學習進度偏慢，但會持續進步且完成作業的。 \n', 'tags': '', 'url': 'tutorials1心得.html'}, {'title': 'Problem', 'text': '1. Tutorial1 bubbleRob 中的程式是用哪種程式語言寫的? \n Lua語言。 \n 2.Coppeliasim中graph是用來顯示什麼的? \n 在CoppeliaSim中，"graph"是用來顯示模擬過程中某些物理量或其他數據隨時間變化的趨勢圖。 \n 3.在CoppeliaSim中，scene與model有何不同? \n 場景(scene) 和 模型(model) 是CoppeliaSim的主要模擬元素。 模型是場景的子元素，明確標記為模型。 一個場景可能包含任意數量的模型。 \n 4.在CoppeliaSim scene中，何謂clean model? \n 在CoppeliaSim中，"clean model"是指在模擬場景中只包含必要模型的模型。這些模型是在模擬中實際使用的模型，而不是所有模型，因此可以減少模擬的計算量，提高模擬性能。 \n 當您從CoppeliaSim的模型庫中將一個模型拖入場景中時，它可能會附帶許多其他子模型、腳本、設置等。這些子模型和腳本可能在您的模擬中沒有用處，因此將它們刪除可以創建一個更簡潔的、更高效的模擬場景。 \n 建立clean model可參考此教程: https://www.coppeliarobotics.com/helpFiles/en/buildingAModelTutorial.htm \n 5.Coppeliasim的.ttt檔案格式與.simscene.xml檔案格式有何不同? \n CoppeliaSim的 .ttt 文件格式和 .simscene.xml 文件格式都是用於保存CoppeliaSim場景的檔案格式。 \n .ttt 是CoppeliaSim的舊版本場景文件格式，它使用二進制格式保存場景。它包含場景中所有物體的位置、大小、方向以及物體之間的關係等信息。 .ttt 格式還包含了場景中使用的Lua腳本和控制器的代碼，以及可視化編程語言V-REP圖標的位置和方向等信息。但是，由於該格式使用二進制保存，因此難以手動編輯和合併。 \n .simscene.xml 是CoppeliaSim的新版本場景文件格式，它使用XML格式保存場景。與 .ttt 格式相比， .simscene.xml 文件格式更加靈活且易於手動編輯和版本控制。此外， .simscene.xml 文件格式還允許您將場景分為多個文件，並在需要時進行合併。這使得團隊協作更加容易。 \n', 'tags': '', 'url': 'Problem.html'}, {'title': 'W6(H2)', 'text': '', 'tags': '', 'url': 'W6(H2).html'}]};